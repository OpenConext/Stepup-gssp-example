service_provider: Service provider

page.title: GSSP SDK

page.header.stepup-gateway-gssp: Wiki
page.header.stepup-gssp-bundle: GSSP-Bundle

page.navigation.route.homepage: Home
page.navigation.route.app_identity_registration: Registration
page.navigation.route.app_identity_authentication: Authentication
page.navigation.route.gssp_saml_sso: SSO
page.navigation.route.gssp_saml_sso_return: SSO return
page.navigation.route.gssp_saml_metadata: Metadata

page.footer.terms: Terms and Conditions

page.index.title: Welcome to Generic SAML Stepup Provider SDK
page.index.body.intro: |
  Your application is ready. You can use this example to start imlementing your authentication.
  SDK is configured with demo configuration and can provide registration and authentication to the demo SP.

page.index.body.sdk_discription: |
  The AppBundle contains the example registration and authentication endpoints. This is the main entry for your application. See DefaultController::registrationAction and DefaultController::authenticateAction.
  This is the place to implement the logic of your IdP. For more information read the README.md file of this project.

page.index.body.registration.title: Registration flow
page.index.body.registration.step1.go_to_sp: 1) Go to
page.index.body.registration.step2.select_idp: 2) Select '%idp-entity-id%' from the 'Identity Provide' list
page.index.body.registration.step3.click_login: 3) Click the 'login' button
page.index.body.registration.step4.click_register: 4) Click the 'Register user' button

page.index.body.authentication.title: Authentication flow
page.index.body.authentication.step1.go_to_sp: 1) Go to
page.index.body.authentication.step2.select_idp: 2) Select '%idp-entity-id%' from the 'Identity Provide' list
page.index.body.authentication.step3.fill_subject: 3) Fill the user NameId in the 'subject' field
page.index.body.authentication.step4.click_login: 4) Click the 'login' button
page.index.body.authentication.step5.click_authenticate: 5) Click the 'Authenticate user' button

page.route.description.app_identity_registration: |
  This path is linked in the menu for demo and documentation purpose.
  The application path that handles the registration, this is the entry point to implement the custom registration logic.
page.route.description.app_identity_authentication: |
  This path is linked in the menu for demo and documentation purpose.
  The application path that handles the authentication, this is the entry point to implement the custom authentication logic.
page.route.description.gssp_saml_sso: |
  This path is linked in the menu for demo and documentation purpose.
  It's provided by the GSSP bundle that handles the AuthnRequest saml request from Service Provider.
  Then it decides if it needs to go to the application registration path or application authentication path.
page.route.description.gssp_saml_sso_return: |
  This path is linked in the menu for demo and documentation purpose.
  It's provided by the GSSP bundle that handles the saml response back to the Service provider.</br>
  </br>
  - If the application expects a registration or authentication but the user is not yet registered or authenticated by the application, the user will be redirected back to the corresponding path.
  </br>
  - Shows a submit button when JavaScript is disabled

en: EN
nl_NL: NL
